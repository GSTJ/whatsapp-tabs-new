// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

enum MessageType {
    TEXT
}

enum MessageDirection {
    INBOUND
    OUTBOUND
}

enum MessageStatus {
    PENDING
    SENT
    DELIVERED
    READ
}

model Message {
    id Int @id @default(autoincrement())

    sid String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    employee   Customer? @relation(fields: [employeeId], references: [id])
    employeeId String?

    customer   Employee @relation(fields: [customerId], references: [id])
    customerId String

    type MessageType

    status MessageStatus

    direction MessageDirection

    body String

    @@index([body])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         Employee @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Company {
    id        String     @id @default(cuid())
    name      String
    employees Employee[]
}

enum EmployeeRole {
    ADMIN
    AGENT
}

model Employee {
    id            String       @id @default(cuid())
    name          String
    email         String       @unique
    emailVerified DateTime?
    image         String?
    sessions      Session[]
    company       Company      @relation(fields: [companyId], references: [id])
    companyId     String
    role          EmployeeRole
    Message       Message[]
}

model Customer {
    id      String    @id @default(cuid())
    name    String?
    image   String?
    phone   String    @unique
    Message Message[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
