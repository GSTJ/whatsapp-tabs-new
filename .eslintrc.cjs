/** @type {import("eslint").Linter.Config} */
const config = {
  extends: [
    "plugin:testing-library/react",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@next/next/recommended",
    "plugin:deprecation/recommended",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "./tsconfig.json",
  },
  settings: {
    react: {
      version: "detect",
    },
  },
  rules: {
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        argsIgnorePattern: "^_",
        varsIgnorePattern: "^_",
      },
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-require-imports": "off",
    "@next/next/no-html-link-for-pages": "off",
    "react/react-in-jsx-scope": "off",
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement",
    ],
    "no-restricted-imports": ["error", { patterns: [".*"] }],
    "no-console": "error",
    "no-void": 0,
    "import/no-duplicates": "error",
    "import/no-anonymous-default-export": "off",
    "import/order": "off",
    "import/no-mutable-exports": "off",
    "line-comment-position": "off",
    "unused-imports/no-unused-imports": "error",
    "prefer-arrow-functions/prefer-arrow-functions": [
      "error",
      {
        classPropertiesAllowed: false,
        disallowPrototype: false,
        returnStyle: "unchanged",
        singleReturnOnly: false,
      },
    ],
    "react-compiler/react-compiler": "error",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "testing-library/await-async-queries": "error",
    "testing-library/await-async-utils": "error",
    "testing-library/no-debugging-utils": "error",
    "testing-library/no-manual-cleanup": "error",
    "testing-library/no-unnecessary-act": "error",
    "testing-library/prefer-find-by": "error",
    "testing-library/prefer-presence-queries": "error",
    "testing-library/prefer-screen-queries": "error",
    "jsx-a11y/no-autofocus": "off",
    "react/style-prop-object": "off",
    "react/display-name": "off",
    "react/self-closing-comp": "error",
    "react/jsx-no-useless-fragment": ["error", { allowExpressions: true }],
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-handler-names": ["warn"],
    "react/jsx-key": [
      "error",
      { checkFragmentShorthand: true, warnOnDuplicates: true },
    ],
    "react/jsx-no-leaked-render": ["error"],
    "react/no-children-prop": 1,
    "react/self-closing-comp": ["error", { component: true }],
    "react/jsx-no-useless-fragment": ["error", { allowExpressions: true }],
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-handler-names": ["warn"],
    "react/jsx-key": [
      "error",
      { checkFragmentShorthand: true, warnOnDuplicates: true },
    ],
    "react/jsx-no-leaked-render": ["error"],
    "react/no-children-prop": 1,
    "react/function-component-definition": [
      "error",
      {
        namedComponents: "arrow-function",
        unnamedComponents: "arrow-function",
      },
    ],
    "react/self-closing-comp": ["error", { component: true }],
    "react/jsx-curly-brace-presence": [
      "error",
      { props: "never", children: "never" },
    ],
  },
  plugins: [
    "unused-imports",
    "import",
    "prefer-arrow-functions",
    "@typescript-eslint",
    "eslint-comments",
    "react",
    "react-compiler",
  ],
  ignorePatterns: [
    "**/dist/**",
    "**/node_modules/**",
    "**/coverage/**",
    "**/.turbo/**",
    "**/eslint/**",
  ],
};

module.exports = config;
